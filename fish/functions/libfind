COLOR='maganda'
while getopts :c:d:p: name
do
	case $name in
		c) CAT="$OPTARG" ;;
		d) DIR="$OPTARG" ;;
		p) PATTERN="$OPTARG" ;;
		*) usage ;;                # display usage and exit
	esac
done

result_grep="$(ggrep --binary-file=without-match --line-number -i --no-messages --recursive --exclude-dir=css --exclude-dir=fonts --exclude-dir=www --exclude-dir='.*' --exclude-dir=lib --exclude-dir='*plugin*' --exclude-dir=vendor --exclude-dir='*js*' --exclude-dir=platforms --exclude-dir=frameworks --exclude-dir=tools --exclude-dir='*bootstrap*' --exclude='*min*' --word-regexp $PATTERN $DIR)"
results=("${(f)result_grep}")

if [ -n "$results" ]
then
	for result in $results
	do
		color_words $result $PATTERN $COLOR
	done
fi

result_find=$(find . -type d -name lib -name fonts -name www -name '*plugin*' -name vendor -name '*js*' -name platforms -name frameworks -name tools -name '*bootstrap*' -prune -o -type f -name "*$PATTERN*")
results=("${(f)result_find}")

for result in $results
do

	if [[ "$CAT" == "" ]]
	then
		color_words $result $PATTERN $COLOR
	else
		# If CAT not null
		eval "$COLOR $result"
		color_words "$(cat $result)" $PATTERN $COLOR
	fi
done

